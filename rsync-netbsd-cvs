#! /bin/sh
#
#	rsync-netbsd-cvs - rsync the CVS repo from NetBSD
#
# also updates local working directories....
#
#ident "@(#)LOCAL:rsync-netbsd-cvs,v 1.39 2004/11/08 23:41:57 woods Exp"

PATH=$PATH:/usr/pkg/sbin:/usr/pkg/bin:/usr/local/sbin:/usr/local/bin
export PATH

#
#	local configuration
#

# uncomment for testing
#
#RSYNC_DEBUG="-vv -n"
#CVS_DEBUG="-n"

# NOTE:  If you probably want the following two files in ${LOCAL_REPO}:
#
# main/CVSROOT/cvsignore:
#	obj
#	obj.*
#	work
#	work.*
#
# main/CVSROOT/config:
#	tag=NetBSD
#
# and you'll want to make them immutable:  'chflags +schg'

# places to run "cvs update" after the rsync is done
#
WORK_DIRS="/work/NetBSD/othersrc /work/NetBSD/src /work/NetBSD/src-1.6 /work/NetBSD/xsrc /work/NetBSD/pkgsrc /most/big1/www/htdocs-netbsd.robohack.ca"

# places to run "cvs -n update" after the rsync is done
#
#WORK_DIRS_CHECK="/work/woods/m-NetBSD-pkgsrc"

#
#	remote configuration
#

SITE="anoncvs.netbsd.org"
METHOD="rsync://"
# aka the "module":
DIRECTORY="/cvsroot"
#
# The "main" sub-directory doesn't exist here...
# WARNING: this pathname needs a trailing slash!
#
LOCAL_REPO="/cvs/master/m-NetBSD/main/"
EXTERNAL=""

# old, and still available site
#
# WARNING: LOCAL_REPO doesn't have "/main/" on rsync.netbsd.org
# NOTE: this affects LOCAL_MKDIRS!
#
#SITE="rsync.netbsd.org"
#METHOD="rsync://"
#DIRECTORY="/anoncvs"
#LOCAL_REPO="/cvs/master/m-NetBSD/"
#EXTERNAL=""

# alternate site
#
#SITE="rsync.jp.netbsd.org"
#METHOD="rsync://"
#DIRECTORY="/anoncvs"
#LOCAL_REPO="/cvs/master/m-NetBSD/main/"
#EXTERNAL=""

# alternate site using rsh (hopefully over a private link! :-)
#
#SITE=""
#METHOD="woods@whome.planix.com:"
#DIRECTORY="/u5/NetBSD-CVS/"		# XXX not sure this is right any more
#LOCAL_REPO="/cvs/master/m-NetBSD/main/"
#EXTERNAL="-e rsh --blocking-io"

# WARNING:  this script could fail to interlock properly if it can be
# invoked simultaneously with more than one name!  Don't do that!
# 
LOCKDIR=/tmp/$(basename $0).lock

if [ -e $LOCKDIR ] ; then
	echo "It appears there's already an instance of $0 running..." 1>&2
	exit 1
fi

if mkdir $LOCKDIR ; then
	: #got it!
else
	echo "Oops, just missed grabbing $LOCKDIR!" 1>&2
	exit 1
fi

cp /var/log/rsync-netbsd-cvs /var/log/rsync-netbsd-cvs.old

(
	while true; do
	        printf "START:%s: rsync\n" "$(date '+%Y/%m/%d-%T')"
		rsync ${DEBUG} -rlptgoD -vz ${EXTERNAL} --stats --delete --delete-after --exclude '#cvs.lock' ${METHOD}${SITE}${DIRECTORY} ${LOCAL_REPO}
		rc=$?
		#
		# Note that E#23 happens normally when rsync can't
		# delete the files I've made purposefully immutable
		# specifically so that it can't delete them.
		#
		# Also presumably if the remote server had a problem
		# or there was some other filesystem error on this end
		# then we should just give up and report what happened
		# and wait for tomorrow to try again
		#
	        if [ $rc -eq 0 -o $rc -eq 23 ]; then
	                break
		else
			echo ""
			printf "FAILED:%s: rsync exited with code: %d\n" "$(date '+%Y/%m/%d-%T')" $rc
	        fi
		# no newline in case someone's doing a 'tail -f'....
	        printf "PAUSE:%s: " "$(date '+%Y/%m/%d-%T')"
	        sleep 120
	        echo "RESTART"
	done
        printf "DONE:%s: rsync\n" "$(date '+%Y/%m/%d-%T')"
) > /var/log/rsync-netbsd-cvs 2>&1

# this produces the Cron report from the raw log by ignoring any line
# which ends in a '/' (presumably it's just one of the directories
# that was updated)
#
grep -v '/$' /var/log/rsync-netbsd-cvs
echo ""

# re-create directories in the REPO that we have local but of course
# uncommitted new files within...
#
# we could make these immutable but since they are directories that
# might just cause more problems than it solves...
#
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/mail/cyrus-imapd21-cyradm"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/mail/smail"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/mail/smail/files"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/mail/smail/scripts"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/mail/smail+cyrus"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/mail/smtprc"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/mail/smtprc/patches"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/mail/vrfy"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/net/whoson"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/net/whoson/files"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/net/whoson/patches"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/pkgtools/mailwrapper"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/pkgtools/mailwrapper/files"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/www/apache+modssl-local"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/www/apache+modssl-local/files"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/www/apache+modssl-local/patches"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/pkgsrc/x11/xterm/patches"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/bin/awk"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/bin/fgrep"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/bin/nc"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/dist/dhcp/contrib/ms2isc"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/dist/dhcp/doc/ja_JP.eucJP"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/etc/namedb/master"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/lib/libcrack"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/fingerd/samples"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/pkcrackdict"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/sccs"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/sccs/cmd"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/sccs/com"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/sccs/doc"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/sccs/hdr"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/sccs/help.d"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/sccs/util"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/libexec/unpkcrackdict"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/regress/usr.sbin"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/regress/usr.sbin/pwd_mkdb"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.bin/grep"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.bin/host"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.bin/sccs"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.bin/sccs/PSD.doc"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.bin/testpasswd"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.bin/vacation/librfc2822"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.bin/xd"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.sbin/flc"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.sbin/flc/BNF"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.sbin/idecrypt"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.sbin/lmhw"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.sbin/mkcrackdict"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/usr.sbin/update-protocols"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/tools/mkcrackdict"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/tools/newsyslog"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/src/tools/pkcrackdict"
LOCAL_MKDIRS="${LOCAL_MKDIRS} ${LOCAL_REPO}/xsrc/xc/programs/xterm/X11"

install -d -m 775 ${LOCAL_MKDIRS}


for work_dir in $WORK_DIRS; do
	echo "================================================================"
        printf "\nSTART:%s: cvs update $work_dir\n\n" "$(date '+%Y/%m/%d-%T')"
	cd $work_dir && cvs ${CVS_DEBUG} -u -q update -P -d
        printf "\nDONE:%s: updating $work_dir\n\n" "$(date '+%Y/%m/%d-%T')"
	if [ -x /usr/pkg/bin/lintpkgsrc -a -f $work_dir/packages-to-upgrade -a $(basename $work_dir) = "pkgsrc" ] ; then
		/usr/pkg/bin/lintpkgsrc -P $work_dir -i | tee $work_dir/packages-to-upgrade.new
		if [ -s $work_dir/packages-to-upgrade.new ] ; then
			mv -f $work_dir/packages-to-upgrade.new  $work_dir/packages-to-upgrade
		fi
	fi
done

for work_dir in $WORK_DIRS_CHECK; do
        printf "\nSTART:%s: cvs -n update $work_dir\n\n" "$(date '+%Y/%m/%d-%T')"
	cd $work_dir && cvs -u -nq update -P -d 2>&1 | fgrep -v 'cvs update: New directory'
        printf "\nDONE:%s: checking $work_dir\n\n" "$(date '+%Y/%m/%d-%T')"
done

if [ ! -d $LOCKDIR ] ; then
	echo "OOPS!!!!  $LOCKDIR went missing!!!!" 1>&2
	exit 1
fi
rmdir $LOCKDIR

exit $?
